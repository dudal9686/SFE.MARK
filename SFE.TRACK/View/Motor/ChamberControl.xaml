<UserControl x:Class="SFE.TRACK.View.Motor.ChamberControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:local="clr-namespace:SFE.TRACK.View.Motor"
             DataContext="{Binding ChamberControlViewModel, Source={StaticResource Locator}}"
             mc:Ignorable="d" 
             d:DesignHeight="880" d:DesignWidth="1574" IsVisibleChanged="UserControl_IsVisibleChanged">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="4*"/>
            <RowDefinition Height="1.3*"/>
            <RowDefinition Height="1.3*"/>
            <RowDefinition Height="1.4*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Border BorderBrush="Gray" BorderThickness="0.3" Margin="5 -45 0 0" Canvas.Top="100" Height="132">
                <StackPanel Orientation="Vertical" Margin="0 0 0 0">
                    <materialDesign:ColorZone BorderBrush="Navy" Height="50" BorderThickness="0" Mode="Custom" Background="#8F98AC" Foreground="White" Padding="7" CornerRadius="5"  ClipToBounds="False">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="InfoCircle" Width="30" Height="30" Foreground="Navy"/>
                            <TextBlock Text="{Binding AxisInfo}" Foreground="White" FontSize="30" FontWeight="Bold" VerticalAlignment="Center" Margin="10 0 0 0"/>
                        </StackPanel>
                    </materialDesign:ColorZone>
                    <DataGrid Name="DataGrid"  ItemsSource="{Binding AxisList, Mode=TwoWay, UpdateSourceTrigger=Default}" GridLinesVisibility="All" Height="82" TextBlock.TextAlignment="Center" FontFamily = "Consolar" RowHeight="40" SelectionMode="Single" AutoGenerateColumns="False" CanUserDeleteRows="False" CanUserReorderColumns="False" CanUserResizeColumns="False" CanUserResizeRows="False" CanUserSortColumns="False" IsReadOnly="True" >
                        <!--Height="100"-->
                        <DataGrid.Resources>
                            <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="Foreground" Value="DarkBlue"/>
                                <Setter Property="FontSize" Value="17"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="Height" Value="40"/>
                            </Style>
                        </DataGrid.Resources>
                        <DataGrid.RowStyle>
                            <Style TargetType="{x:Type DataGridRow}">
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="#E0E0E0"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="Height" Value="40"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.Columns>
                            <DataGridTextColumn Width="190" Header="Servo State">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Height" Value="40"/>
                                        <Setter Property="Background" Value="{Binding ServoState}"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Width="190" Header="InMotion">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Height" Value="40"/>
                                        <Setter Property="Background" Value="{Binding InMotionState}"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Width="190" Header="PV" Binding="{Binding DataContext.Chamber.ProcessValue,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=UserControl}}" FontSize="20" Foreground="Black">
                                
                            </DataGridTextColumn>
                            <DataGridTextColumn Width="190" Header="SV" Binding="{Binding DataContext.Chamber.SetValue,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=UserControl}}" FontSize="20" Foreground="Black">
                                
                            </DataGridTextColumn>
                            <DataGridTextColumn Width="190" Header="Limit[+]" >
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Height" Value="40"/>
                                        <Setter Property="Background" Value="{Binding PlusLimitState}"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Width="190" Header="Limit[-]">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Height" Value="40"/>
                                        <Setter Property="Background" Value="{Binding MinusLimitState}"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Width="190" Header="Position" Binding="{Binding ActualPosition}" FontSize="20" Foreground="Black">
                                
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                        <DataGrid.InputBindings>
                            <MouseBinding Gesture="LeftDoubleClick" Command="{Binding GridlDoubleClickRelayCommand}" CommandParameter="{Binding ElementName=DataGrid}"/>
                        </DataGrid.InputBindings>
                    </DataGrid>
                    
                </StackPanel>
                
            </Border>
        </Grid>
        <Grid Grid.Row="1">
            <Border BorderBrush="Gray" BorderThickness="0.3" Margin="5 0 0 0">
                <StackPanel Orientation="Vertical" Margin="0 0 0 0">
                    <materialDesign:ColorZone BorderBrush="Navy" Height="50" BorderThickness="0" Mode="Custom" Background="#8F98AC" Foreground="White" Padding="7" CornerRadius="5"  ClipToBounds="False">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="VerticalRotateClockwise" Width="30" Height="30" Foreground="Navy"/>
                            <TextBlock Text="Jog" Foreground="White" FontSize="18" VerticalAlignment="Center" Margin="10 0 0 0"/>
                        </StackPanel>
                    </materialDesign:ColorZone>
                    <Canvas>
                        <StackPanel Orientation="Horizontal" Canvas.Left="150" Canvas.Top="10">
                            <RadioButton Visibility="Hidden" Content="Jog" IsChecked="{Binding IsVelocity[0], Mode=TwoWay}" FontSize="30" Margin="20 0 0 0"/>
                            <RadioButton  Content="Pitch" IsChecked="{Binding IsVelocity[1], Mode=TwoWay}" FontSize="30" Margin="20 0 0 0"/>
                            <TextBox Width="100" IsReadOnly="True" TextAlignment="Center" FontSize="30" Text="{Binding Pitch}" Margin="100 0 0 0">
                                <TextBox.InputBindings>
                                    <MouseBinding Command="{Binding PitchClickRelayCommand}" MouseAction="LeftDoubleClick"></MouseBinding>
                                </TextBox.InputBindings>
                            </TextBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Canvas.Left="40" Canvas.Top="80">
                            <Button Width="350" Height="200" Content="+" FontSize="100" >
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewMouseDown" >
                                        <i:InvokeCommandAction Command="{Binding MouseDownPlusRelayCommand}" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="PreviewMouseUp" >
                                        <i:InvokeCommandAction Command="{Binding MouseUpPlusRelayCommand}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>
                            <Button Width="350" Height="200" Content="-" FontSize="100" Margin="5 0 0 0">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewMouseDown" >
                                        <i:InvokeCommandAction Command="{Binding MouseDownMinusRelayCommand}" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="PreviewMouseUp" >
                                        <i:InvokeCommandAction Command="{Binding MouseUpMinusRelayCommand}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>
                        </StackPanel>
                    </Canvas>
                </StackPanel>
            </Border>
        </Grid>
        <Grid Grid.Row="2">
            <StackPanel Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0 5 0 0">
                <Button Height="100" Width="200" Background="#8F98AC" Margin="5 0 0 0" Command="{Binding HomeRelayCommand}">
                    <StackPanel>
                        <materialDesign:PackIcon HorizontalAlignment="Center" Kind="Home" Width="40" Height="40" Foreground="Peru" Margin="0 5 0 0"/>
                        <TextBlock HorizontalAlignment="Center" FontSize="18" Text="Home" FontWeight="Bold" Foreground="White" Margin="0 5 0 0"/>
                    </StackPanel>
                </Button>
                <Button Height="100" Width="200" Background="#8F98AC" Margin="5 0 0 0" Command="{Binding ServoOnRelayCommand}">
                    <StackPanel>
                        <materialDesign:PackIcon HorizontalAlignment="Center" Kind="Circle" Width="40" Height="40" Foreground="Green" Margin="0 5 0 0"/>
                        <TextBlock HorizontalAlignment="Center" FontSize="18" Text="Servo On" FontWeight="Bold" Foreground="White" Margin="0 5 0 0"/>
                    </StackPanel>
                </Button>
                <Button Height="100" Width="200" Background="#8F98AC" Margin="5 0 0 0" Command="{Binding ServoOffRelayCommand}">
                    <StackPanel>
                        <materialDesign:PackIcon HorizontalAlignment="Center" Kind="NullOff" Width="40" Height="40" Foreground="Green" Margin="0 5 0 0"/>
                        <TextBlock HorizontalAlignment="Center" FontSize="18" Text="Servo Off" FontWeight="Bold" Foreground="White" Margin="0 5 0 0"/>
                    </StackPanel>
                </Button>
                <Button Height="100" Width="200" Background="#8F98AC" Margin="5 0 0 0" Command="{Binding StopRelayCommand}">
                    <StackPanel>
                        <materialDesign:PackIcon HorizontalAlignment="Center" Kind="Stop" Width="40" Height="40" Foreground="Red" Margin="0 5 0 0"/>
                        <TextBlock HorizontalAlignment="Center" FontSize="18" Text="Stop" FontWeight="Bold" Foreground="White" Margin="0 5 0 0"/>
                    </StackPanel>
                </Button>
            </StackPanel>
        </Grid>
        <Grid Grid.Row="3">
            <StackPanel Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0 5 0 0">
                <Button Height="100" Width="200" Background="#8F98AC" Margin="5 0 0 0" ToolTip="Run" Command="{Binding TempRunRelayCommand}">
                    <StackPanel>
                        <materialDesign:PackIcon HorizontalAlignment="Center" Kind="Play" Width="40" Height="40" Foreground="Blue" Margin="0 5 0 0"/>
                        <TextBlock HorizontalAlignment="Center" FontSize="18" Text="Temp Run" FontWeight="Bold" Foreground="White" Margin="0 5 0 0"/>
                    </StackPanel>
                </Button>
                <Button Height="100" Width="200" Background="#8F98AC" Margin="5 0 0 0" ToolTip="Stop" Command="{Binding TempStopRelayCommand}">
                    <StackPanel>
                        <materialDesign:PackIcon HorizontalAlignment="Center" Kind="Stop" Width="40" Height="40" Foreground="Red" Margin="0 5 0 0"/>
                        <TextBlock HorizontalAlignment="Center" FontSize="18" Text="Temp Stop" FontWeight="Bold" Foreground="White" Margin="0 5 0 0"/>
                    </StackPanel>
                </Button>
                
                <Button Height="100" Width="200" Background="#8F98AC" Margin="5 0 0 0" ToolTip="Pin Home" Command="{Binding PinHomeRelayCommand}">
                    <StackPanel>
                        <materialDesign:PackIcon HorizontalAlignment="Center" Kind="Pin" Width="40" Height="40" Foreground="Orange" Margin="0 5 0 0"/>
                        <TextBlock HorizontalAlignment="Center" FontSize="18" Text="Pin Home" FontWeight="Bold" Foreground="White" Margin="0 5 0 0"/>
                    </StackPanel>
                </Button>
                <Button Height="100" Width="200" Background="#8F98AC" Margin="5 0 0 0" ToolTip="Pin Home" Command="{Binding PinReadyRelayCommand}">
                    <StackPanel>
                        <materialDesign:PackIcon HorizontalAlignment="Center" Kind="Pin" Width="40" Height="40" Foreground="Orange" Margin="0 5 0 0"/>
                        <TextBlock HorizontalAlignment="Center" FontSize="18" Text="Pin Ready" FontWeight="Bold" Foreground="White" Margin="0 5 0 0"/>
                    </StackPanel>
                </Button>
                <!--<Button Height="100" Width="200" Background="#8F98AC" Margin="5 0 0 0" Command="{Binding AutoTuningRelayCommand}">
                    <StackPanel>
                        <materialDesign:PackIcon HorizontalAlignment="Center" Kind="Tune" Width="40" Height="40" Foreground="Yellow" Margin="0 5 0 0"/>
                        <TextBlock HorizontalAlignment="Center" FontSize="18" Text="Auto Tuning" FontWeight="Bold" Foreground="White" Margin="0 5 0 0"/>
                    </StackPanel>
                </Button>-->
            </StackPanel>
        </Grid>
        <Grid Grid.Row="4">
            <StackPanel Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0 5 0 0">
                <Button Height="100" Width="200" Background="#8F98AC" Margin="5 0 0 0" ToolTip="Pin Down" Command="{Binding PinDownRelayCommand}">
                    <StackPanel>
                        <materialDesign:PackIcon HorizontalAlignment="Center" Kind="Download" Width="40" Height="40" Foreground="Brown" Margin="0 5 0 0"/>
                        <TextBlock HorizontalAlignment="Center" FontSize="18" Text="Pin Down" FontWeight="Bold" Foreground="White" Margin="0 5 0 0"/>
                    </StackPanel>
                </Button>
                <Button Height="100" Width="200" Background="#8F98AC" Margin="5 0 0 0" ToolTip="Pin Up" Command="{Binding PinUpRelayCommand}">
                    <StackPanel>
                        <materialDesign:PackIcon HorizontalAlignment="Center" Kind="Upload" Width="40" Height="40" Foreground="Brown" Margin="0 5 0 0"/>
                        <TextBlock HorizontalAlignment="Center" FontSize="18" Text="Pin Up" FontWeight="Bold" Foreground="White" Margin="0 5 0 0"/>
                    </StackPanel>
                </Button>
                <Button Height="100" Width="200" Background="#8F98AC" Margin="5 0 0 0" ToolTip="Shtter Open" Command="{Binding ShutterOpenRelayCommand}">
                    <StackPanel>
                        <materialDesign:PackIcon HorizontalAlignment="Center" Kind="ArrowUp" Width="40" Height="40" Foreground="Black" Margin="0 5 0 0"/>
                        <TextBlock HorizontalAlignment="Center" FontSize="18" Text="Shutter Open" FontWeight="Bold" Foreground="White" Margin="0 5 0 0"/>
                    </StackPanel>
                </Button>
                <Button Height="100" Width="200" Background="#8F98AC" Margin="5 0 0 0" ToolTip="Shutter Close" Command="{Binding ShutterCloseRelayCommand}">
                    <StackPanel>
                        <materialDesign:PackIcon HorizontalAlignment="Center" Kind="ArrowDown" Width="40" Height="40" Foreground="Black" Margin="0 5 0 0"/>
                        <TextBlock HorizontalAlignment="Center" FontSize="18" Text="Shutter Close" FontWeight="Bold" Foreground="White" Margin="0 5 0 0"/>
                    </StackPanel>
                </Button>                
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
