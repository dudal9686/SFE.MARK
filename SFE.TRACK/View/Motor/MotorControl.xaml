<UserControl x:Class="SFE.TRACK.View.Motor.MotorControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SFE.TRACK.View.Motor"
             xmlns:Motor="clr-namespace:SFE.TRACK.ViewModel.Motor"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             DataContext="{Binding MotorControlViewModel, Source={StaticResource Locator}}"
             mc:Ignorable="d" 
             d:DesignHeight="880" d:DesignWidth="1574">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="4.7*"/>
            <RowDefinition Height="1.3*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Row="0" Grid.ColumnSpan="2">
        <Border BorderBrush="Gray" BorderThickness="0.3" Margin="5 -45 0 0" Canvas.Top="100" Height="132">
            <StackPanel Orientation="Vertical" Margin="0 0 0 0">
                <materialDesign:ColorZone BorderBrush="Navy" Height="50" BorderThickness="0" Mode="Custom" Background="#8F98AC" Foreground="White" Padding="7" CornerRadius="5"  ClipToBounds="False">
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="InfoCircle" Width="30" Height="30" Foreground="Navy"/>
                            <TextBlock Text="{Binding AxisInfo}" Foreground="White" FontSize="18" VerticalAlignment="Center" Margin="10 0 0 0"/>
                    </StackPanel>
                </materialDesign:ColorZone>
                    <DataGrid ItemsSource="{Binding AxisList, Mode=TwoWay, UpdateSourceTrigger=Default}" SelectedItem="{Binding Axis, Mode=TwoWay, UpdateSourceTrigger=Default}" GridLinesVisibility="All" Height="82" TextBlock.TextAlignment="Center" FontFamily = "Consolar" RowHeight="40" SelectionMode="Single" AutoGenerateColumns="False" CanUserDeleteRows="False" CanUserReorderColumns="False" CanUserResizeColumns="False" CanUserResizeRows="False" CanUserSortColumns="False" IsReadOnly="True" >
                    <!--Height="100"-->
                    <DataGrid.Resources>
                        <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="Foreground" Value="DarkBlue"/>
                            <Setter Property="FontSize" Value="17"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="Height" Value="40"/>
                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.RowStyle>
                        <Style TargetType="{x:Type DataGridRow}">
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="#E0E0E0"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter Property="Height" Value="40"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>
                    <DataGrid.Columns>
                        <DataGridTextColumn Width="190" Header="Servo State">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Height" Value="40"/>
                                    <Setter Property="Background" Value="{Binding ServoState}"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Width="190" Header="Alarm State">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Height" Value="40"/>
                                    <Setter Property="Background" Value="{Binding AlarmState}"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Width="190" Header="InMotion">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Height" Value="40"/>
                                    <Setter Property="Background" Value="{Binding InMotionState}"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Width="190" Header="InPosition">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Height" Value="40"/>
                                    <Setter Property="Background" Value="{Binding InPositionState}"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Width="190" Header="Home[+]" >
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Height" Value="40"/>
                                    <Setter Property="Background" Value="{Binding PlusHomeLimitState}"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Width="190" Header="Home[-]">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Height" Value="40"/>
                                    <Setter Property="Background" Value="{Binding MinusHomeLimitState}"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Width="190" Header="Limit[+]" >
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Height" Value="40"/>
                                    <Setter Property="Background" Value="{Binding PlusLimitState}"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Width="190" Header="Limit[-]">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Height" Value="40"/>
                                    <Setter Property="Background" Value="{Binding MinusLimitState}"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </StackPanel>
        </Border>
        </Grid>
        <Grid Grid.Row="1"  Grid.ColumnSpan="2">
            <StackPanel VerticalAlignment="Top" HorizontalAlignment="Left">
                <Border BorderBrush="Gray" BorderThickness="0.3" Margin="5 0 0 0" Height="132" Width="903">
                    <StackPanel Orientation="Vertical" Margin="0 0 0 0">
                        <materialDesign:ColorZone BorderBrush="Navy" Height="50" BorderThickness="0" Mode="Custom" Background="#8F98AC" Foreground="White" Padding="7" CornerRadius="5"  ClipToBounds="False">
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Kind="Speedometer" Width="30" Height="30" Foreground="Navy"/>
                                <TextBlock Text="Axis Position / Speed" Foreground="White" FontSize="18" VerticalAlignment="Center" Margin="10 0 0 0"/>
                            </StackPanel>
                        </materialDesign:ColorZone>
                        <DataGrid ItemsSource="{Binding AxisList}" GridLinesVisibility="All" Height="82" TextBlock.TextAlignment="Center" FontFamily = "Consolar" RowHeight="40" SelectionMode="Single" AutoGenerateColumns="False" CanUserDeleteRows="False" CanUserReorderColumns="False" CanUserResizeColumns="False" CanUserResizeRows="False" CanUserSortColumns="False" IsReadOnly="True" >
                            <DataGrid.Resources>
                                <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                                    <Setter Property="Foreground" Value="DarkBlue"/>
                                    <Setter Property="FontSize" Value="17"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                    <Setter Property="Height" Value="40"/>
                                </Style>
                            </DataGrid.Resources>
                            <DataGrid.RowStyle>
                                <Style TargetType="{x:Type DataGridRow}">
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="White"/>
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Setter Property="Height" Value="40"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowStyle>
                            <DataGrid.Columns>
                                <DataGridTextColumn Width="300" Header="Command Position">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Height" Value="25"/>
                                            <Setter Property="FontSize" Value="20"/>
                                            <Setter Property="Foreground" Value="Black"/>
                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                            <Setter Property="HorizontalAlignment" Value="Center"/>
                                            <Setter Property="Text" Value="{Binding CommandPosition}"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Width="300" Header="Actual Position">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Height" Value="25"/>
                                            <Setter Property="FontSize" Value="20"/>
                                            <Setter Property="Foreground" Value="Black"/>
                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                            <Setter Property="HorizontalAlignment" Value="Center"/>
                                            <Setter Property="Text" Value="{Binding ActualPosition}"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Width="300" Header="Encoder Pulse">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Height" Value="25"/>
                                            <Setter Property="FontSize" Value="20"/>
                                            <Setter Property="Foreground" Value="Black"/>
                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                            <Setter Property="HorizontalAlignment" Value="Center"/>
                                            <Setter Property="Text" Value="0"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>
                </Border>
            </StackPanel>
        </Grid>
        <Grid Grid.Row="2" Grid.Column="0">
            <Border BorderBrush="Gray" BorderThickness="0.3" Margin="5 0 0 0">
                <StackPanel Orientation="Vertical" Margin="0 0 0 0">
                    <materialDesign:ColorZone BorderBrush="Navy" Height="50" BorderThickness="0" Mode="Custom" Background="#8F98AC" Foreground="White" Padding="7" CornerRadius="5"  ClipToBounds="False">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="MoveFromInbox" Width="30" Height="30" Foreground="Navy"/>
                            <TextBlock Text="Position Move" Foreground="White" FontSize="18" VerticalAlignment="Center" Margin="10 0 0 0"/>
                        </StackPanel>
                    </materialDesign:ColorZone>
                    <Canvas>
                        <StackPanel Orientation="Horizontal" Canvas.Top="120" Canvas.Left="10">
                            <TextBlock  Margin="0 10 0 0" Height="50" FontSize="25" Text="1st Position  :   " Background="White" VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center"/>
                            <TextBox Height="50" Width="200" Text="{Binding Axis.ManualFirstTeachingPosition,StringFormat={}{0:F2}, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" FontSize="25"  Margin="11 0 0 0" IsReadOnly="False"/>
                            <Button Height="50" Width="100" Background="#8F98AC" Margin="5 0 0 0" Command="{Binding FirstMoveRelayCommand}">
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Center" FontSize="18" Text="Move" FontWeight="Bold" Foreground="White" Margin="0 5 0 0"/>
                                </StackPanel>
                            </Button>
                            <Button Height="50" Width="120" Background="#8F98AC" Margin="5 0 0 0" Command="{Binding FirstTeachingRelayCommand}">
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Center" FontSize="18" Text="Teaching" FontWeight="Bold" Foreground="White" Margin="0 5 0 0"/>
                                </StackPanel>
                            </Button>

                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Canvas.Top="200" Canvas.Left="10">
                            <TextBlock  Margin="0 10 0 0" Height="50" FontSize="25" Text="2nd Position :   " Background="White" VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center"/>
                            <TextBox Height="50" Width="200" Text="{Binding Axis.ManualSecondTeachingPosition,StringFormat={}{0:F2}, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" FontSize="25"  Margin="10 0 0 0" IsReadOnly="True"/>
                            <Button Height="50" Width="100" Background="#8F98AC" Margin="5 0 0 0" Command="{Binding SecondMoveRelayCommand}">
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Center" FontSize="18" Text="Move" FontWeight="Bold" Foreground="White" Margin="0 5 0 0"/>
                                </StackPanel>
                            </Button>
                            <Button Height="50" Width="120" Background="#8F98AC" Margin="5 0 0 0" Command="{Binding SecondTeachingRelayCommand}">
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Center" FontSize="18" Text="Teaching" FontWeight="Bold" Foreground="White" Margin="0 5 0 0"/>
                                </StackPanel>
                            </Button>
                        </StackPanel>
                        <StackPanel Canvas.Top="125" Canvas.Left="640">
                            <Button Height="130" Width="120" Background="#8F98AC" Margin="5 0 0 0" Command="{Binding RepeatRelayCommand}">
                                <StackPanel>
                                    <materialDesign:PackIcon HorizontalAlignment="Center" Kind="Repeat" Width="30" Height="30" Foreground="#000099" Margin="0 5 0 0"/>
                                    <TextBlock HorizontalAlignment="Center" FontSize="18" Text="Repeat" FontWeight="Bold" Foreground="White" Margin="0 5 0 0"/>
                                </StackPanel>
                            </Button>
                        </StackPanel>
                    </Canvas>
                    <Canvas>
                        <StackPanel Canvas.Left="0" Canvas.Top="5">
                            <DataGrid ItemsSource="{Binding AxisList}" Name="DataGridPosMove" GridLinesVisibility="All" Height="82" TextBlock.TextAlignment="Center" FontFamily = "Consolar" RowHeight="40" SelectionMode="Single" AutoGenerateColumns="False" CanUserDeleteRows="False" CanUserReorderColumns="False" CanUserResizeColumns="False" CanUserResizeRows="False" CanUserSortColumns="False" IsReadOnly="True" >
                                <DataGrid.Resources>
                                    <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                                        <Setter Property="Foreground" Value="DarkBlue"/>
                                        <Setter Property="FontSize" Value="20"/>
                                        <Setter Property="Background" Value="#8F98AC"/>
                                        <Setter Property="FontWeight" Value="Bold"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                        <Setter Property="Height" Value="40"/>
                                    </Style>
                                </DataGrid.Resources>
                                <DataGrid.RowStyle>
                                    <Style TargetType="{x:Type DataGridRow}">
                                        <Style.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Background" Value="White"/>
                                                <Setter Property="BorderThickness" Value="0"/>
                                                <Setter Property="Height" Value="40"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGrid.RowStyle>
                                <DataGrid.Columns>
                                    <DataGridTextColumn Width="260" Header="Acc">
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="Height" Value="25"/>
                                                <Setter Property="FontSize" Value="20"/>
                                                <Setter Property="Foreground" Value="Black"/>
                                                <Setter Property="VerticalAlignment" Value="Center"/>
                                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                                <Setter Property="Text" Value="{Binding ACC}"/>
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Width="260" Header="Dec">
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="Height" Value="25"/>
                                                <Setter Property="FontSize" Value="20"/>
                                                <Setter Property="Foreground" Value="Black"/>
                                                <Setter Property="VerticalAlignment" Value="Center"/>
                                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                                <Setter Property="Text" Value="{Binding DEC}"/>
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Width="260" Header="Vel">
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="Height" Value="25"/>
                                                <Setter Property="FontSize" Value="20"/>
                                                <Setter Property="Foreground" Value="Black"/>
                                                <Setter Property="VerticalAlignment" Value="Center"/>
                                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                                <Setter Property="Text" Value="{Binding VEL}"/>
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>
                                </DataGrid.Columns>
                                <DataGrid.InputBindings>
                                    <MouseBinding Gesture="LeftDoubleClick" Command="{Binding VelocityGridDoubleClickRelayCommand}" CommandParameter="{Binding ElementName=DataGridPosMove}"/>
                                </DataGrid.InputBindings>
                            </DataGrid>
                        </StackPanel>
                    </Canvas>
                </StackPanel>
            </Border>
        </Grid>
        <Grid Grid.Row="2" Grid.Column="1">
            <Border BorderBrush="Gray" BorderThickness="0.3" Margin="5 0 0 0">
                <StackPanel Orientation="Vertical" Margin="0 0 0 0">
                    <materialDesign:ColorZone BorderBrush="Navy" Height="50" BorderThickness="0" Mode="Custom" Background="#8F98AC" Foreground="White" Padding="7" CornerRadius="5"  ClipToBounds="False">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="VerticalRotateClockwise" Width="30" Height="30" Foreground="Navy"/>
                            <TextBlock Text="Jog" Foreground="White" FontSize="18" VerticalAlignment="Center" Margin="10 0 0 0"/>
                        </StackPanel>
                    </materialDesign:ColorZone>
                    <Canvas>
                        <StackPanel Orientation="Horizontal" Canvas.Left="150" Canvas.Top="10">
                            <RadioButton  Content="Low" IsChecked="{Binding IsVelocity[0], Mode=TwoWay}" FontSize="30"/>
                            <RadioButton  Content="High" IsChecked="{Binding IsVelocity[1], Mode=TwoWay}" FontSize="30" Margin="20 0 0 0"/>
                            <RadioButton  Content="Pitch" IsChecked="{Binding IsVelocity[2], Mode=TwoWay}" FontSize="30" Margin="20 0 0 0"/>
                            <TextBox Width="100" IsReadOnly="True" TextAlignment="Center" FontSize="30" Text="{Binding Pitch}" Margin="100 0 0 0">
                                <TextBox.InputBindings>
                                    <MouseBinding Command="{Binding PitchClickRelayCommand}" MouseAction="LeftDoubleClick"></MouseBinding>
                                </TextBox.InputBindings>
                            </TextBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Canvas.Left="40" Canvas.Top="80">
                            <Button Width="350" Height="270" Content="+" FontSize="100" >
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewMouseDown" >
                                        <i:InvokeCommandAction Command="{Binding MouseDownPlusRelayCommand}" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="PreviewMouseUp" >
                                        <i:InvokeCommandAction Command="{Binding MouseUpPlusRelayCommand}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>
                            <Button Width="350" Height="270" Content="-" FontSize="100" Margin="5 0 0 0">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewMouseDown" >
                                        <i:InvokeCommandAction Command="{Binding MouseDownMinusRelayCommand}" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="PreviewMouseUp" >
                                        <i:InvokeCommandAction Command="{Binding MouseUpMinusRelayCommand}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>
                        </StackPanel>
                    </Canvas>
                </StackPanel>
            </Border>
        </Grid>
        <Grid Grid.Row="3"  Grid.ColumnSpan="2">
            <StackPanel Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0 5 0 0">
                <Button Height="100" Width="200" Background="#8F98AC" Margin="5 0 0 0" Command="{Binding Axis.HomeRelayCommand}">
                    <StackPanel>
                        <materialDesign:PackIcon HorizontalAlignment="Center" Kind="Home" Width="40" Height="40" Foreground="Peru" Margin="0 5 0 0"/>
                        <TextBlock HorizontalAlignment="Center" FontSize="18" Text="Home" FontWeight="Bold" Foreground="White" Margin="0 5 0 0"/>
                    </StackPanel>
                </Button>
                <Button Height="100" Width="200" Background="#8F98AC" Margin="5 0 0 0" Command="{Binding Axis.ServoRelayCommand}">
                    <StackPanel>
                        <materialDesign:PackIcon HorizontalAlignment="Center" Kind="Circle" Width="40" Height="40" Foreground="Green" Margin="0 5 0 0"/>
                        <TextBlock HorizontalAlignment="Center" FontSize="18" Text="Servo" FontWeight="Bold" Foreground="White" Margin="0 5 0 0"/>
                    </StackPanel>
                </Button>
                <Button Height="100" Width="200" Background="#8F98AC" Margin="5 0 0 0" Command="{Binding Axis.EncoderClearRelayCommand}">
                    <StackPanel>
                        <materialDesign:PackIcon HorizontalAlignment="Center" Kind="Clear" Width="40" Height="40" Foreground="WhiteSmoke" Margin="0 5 0 0"/>
                        <TextBlock HorizontalAlignment="Center" FontSize="18" Text="Encoder Clear" FontWeight="Bold" Foreground="White" Margin="0 5 0 0"/>
                    </StackPanel>
                </Button>
                <Button Height="100" Width="200" Background="#8F98AC" Margin="5 0 0 0" Command="{Binding Axis.StopRelayCommand}">
                    <StackPanel>
                        <materialDesign:PackIcon HorizontalAlignment="Center" Kind="Stop" Width="40" Height="40" Foreground="Red" Margin="0 5 0 0"/>
                        <TextBlock HorizontalAlignment="Center" FontSize="18" Text="Stop" FontWeight="Bold" Foreground="White" Margin="0 5 0 0"/>
                    </StackPanel>
                </Button>
                <Button Height="100" Width="200" Background="#8F98AC" Margin="5 0 0 0" Command="{Binding Axis.AlarmResetRelayCommand}">
                    <StackPanel>
                        <materialDesign:PackIcon HorizontalAlignment="Center" Kind="ClearCircle" Width="40" Height="40" Foreground="#FF8000" Margin="0 5 0 0"/>
                        <TextBlock HorizontalAlignment="Center" FontSize="18" Text="Alarm Reset" FontWeight="Bold" Foreground="White" Margin="0 5 0 0"/>
                    </StackPanel>
                </Button>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
